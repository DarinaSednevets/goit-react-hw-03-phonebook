{"version":3,"sources":["components/Filter/Filter.module.css","components/Form/Form.module.css","components/Form/Form.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","Form","state","name","number","handleSubmit","event","preventDefault","props","onSubmit","reset","handleChange","currentTarget","value","setState","this","className","styles","label","input","type","pattern","title","required","onChange","disabled","Component","Filter","ContactList","contacts","deleteContact","list","map","id","item","btn","onClick","App","filter","addContact","some","elm","console","log","alert","contact","shortId","generate","changeFilter","getFilteredContacts","normalizedFilter","toLowerCase","includes","contactId","JSON","parse","localStorage","getItem","prevProps","prevState","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08ad1211.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__82f_n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Form_label__1n4KK\",\"input\":\"Form_input__2gJ-u\"};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from \"./Form.module.css\";\r\n\r\nclass Form extends Component {\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    }\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n        this.reset();\r\n\r\n    }\r\n\r\n    handleChange = event => {\r\n        const { name, value } = event.currentTarget;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    reset = () => {\r\n        this.setState({ name: '', number: '' });\r\n    }\r\n\r\n    render() {\r\n        return (<div>\r\n            <section>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <label className={styles.label}>Name\r\n                        <input className={styles.input}\r\n                            type=\"text\"\r\n                            name=\"name\"\r\n                            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                            required\r\n                            value={this.state.name}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </label>\r\n                    <label className={styles.label}>Number\r\n                        <input className={styles.input}\r\n                            type=\"tel\"\r\n                            name=\"number\"\r\n                            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                            required\r\n                            value={this.state.number}\r\n                            onChange={this.handleChange}\r\n                        />\r\n                    </label>\r\n                    <button type='submit' disabled={!this.state.name || !this.state.number} >Add</button>\r\n                </form>\r\n            </section>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nexport default Form;\r\n\r\n\r\nForm.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport styles from \"./Filter.module.css\"\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n    < label >\r\n        Find contact by name\r\n        < input className={styles.input} type=\"text\" value={value} onChange={onChange} ></input >\r\n    </label >\r\n\r\n);\r\nexport default Filter;\r\nFilter.propTypes = {\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired\r\n};","import PropTypes from 'prop-types';\r\nimport styles from \"./ContactList.module.css\"\r\n\r\nconst ContactList = ({ contacts, deleteContact }) => {\r\n    return (\r\n        <ul className={styles.list}>\r\n            {\r\n                contacts.map(({ id, name, number }) =>\r\n                (\r\n                    <li className={styles.item} key={id} >\r\n                        {name}:{number}\r\n                        <button className={styles.btn} type=\"button\"\r\n                            onClick={() => { deleteContact(id) }}\r\n                        >Delete\r\n                        </button>\r\n                    </li>\r\n                ))\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\n\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            number: PropTypes.string.isRequired,\r\n        })\r\n    ),\r\n    deleteContact: PropTypes.func.isRequired\r\n}","import React, { Component } from 'react';\nimport Form from \"./components/Form/Form\"\nimport Filter from './components/Filter/Filter';\nimport ContactList from \"./components/ContactList/ContactList\"\n\n\n\nimport \"./base.css\"\nimport shortId from 'shortid';\n\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: ''\n  }\n  componentDidMount() {\n    const contacts = JSON.parse(localStorage.getItem(\"contacts\"));\n    if (contacts) {\n      this.setState({ contacts: contacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = ({ name, number }) => {\n    if (this.state.contacts.some(elm => elm.name === name)) {\n      console.log(alert(`${name} is already in contacts`));\n      return;\n    }\n    const contact = {\n      id: shortId.generate(),\n      name,\n      number,\n    };\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  changeFilter = event => {\n    this.setState({\n      filter: event.currentTarget.value,\n    });\n  };\n  getFilteredContacts = () => {\n    const normalizedFilter = this.state.filter.toLowerCase();\n    return this.state.contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter)\n    ,);\n  };\n\n\n  deleteContact = contactId => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n\n  render() {\n    const getFilteredContacts = this.getFilteredContacts();\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <Form onSubmit={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter value={this.state.filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={getFilteredContacts}\n          deleteContact={this.deleteContact}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1vZO4\",\"item\":\"ContactList_item__3pxiW\",\"btn\":\"ContactList_btn__1FXx2\"};"],"sourceRoot":""}